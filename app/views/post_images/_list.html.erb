<div class="card-list-container py-3">
  <% post_images.each do |post_image| %>
    <div class="card w-75 mx-auto mt-3 shadow-sm" style="max-width: 300px;">
      <%= link_to post_image_path(post_image.id) do %>
        <%= image_tag post_image.get_image, class: "card-img-top", style: "max-height: 150px; width: 100%; object-fit: contain;" %>
      <% end %>
      <div class="card-body p-2">
        <div class="row">
          <div class="col-3">
            <%= image_tag post_image.user.get_profile_image(40, 40), class: "rounded-circle" %>
          </div>
          <div class="col-9">
            <p class="card-title mb-1" style="font-size: 14px;">
              <%= link_to post_image_path(post_image.id), class: "text-dark fw-bold" do %>
                <%= post_image.title %>
              <% end %>
            </p>
            <p class="card-text mb-0" style="font-size: 12px;">Caption: <%= post_image.caption %></p>
            <p class="text-muted" style="font-size: 12px;">
              <i class="fas fa-user"></i> By <%= post_image.user.name %> |
              <%= link_to "#{post_image.post_comments.count} コメント", post_image_path(post_image.id), class: "text-dark" %>
            </p>
          </div>
        </div>
      </div>
    </div>
  <% end %>
  
エラーメッセージによると、undefined method 'total_pages' for []:Array というエラーが発生しています。これは、total_pages メソッドが Array オブジェクトに対して呼ばれているためです。通常、total_pages は ActiveRecord::Relation オブジェクト（つまり、データベースのクエリ結果）に対して利用できるメソッドですが、@records が Array 型の場合、このメソッドは使えません。

このエラーが発生する理由として、@records が Array 型であり、ページネーションに対応していないことが考えられます。ページネーション機能を使うためには、kaminari や will_paginate のようなページネーションライブラリを使用する必要があります。

解決策
@records にページネーションを追加する
PostImage.search_for メソッドで取得した検索結果をページネートするために、kaminari を使ってページネーションを追加します。

まず、PostImage.search_for メソッドでページネーションを適用します。

修正例 (PostImage モデル)
ruby
コードをコピーする
def self.search_for(content, method)
  if method == 'perfect'
    PostImage.where(title: content)
  elsif method == 'forward'
    PostImage.where('title LIKE ?', content+'%')
  elsif method == 'backward'
    PostImage.where('title LIKE ?', '%'+content)
  else
    PostImage.where('title LIKE ?', '%'+content+'%')
  end
end
このメソッド内で、ページネーションを追加します。

ruby
コードをコピーする
def self.search_for(content, method)
  scope = if method == 'perfect'
            PostImage.where(title: content)
          elsif method == 'forward'
            PostImage.where('title LIKE ?', content+'%')
          elsif method == 'backward'
            PostImage.where('title LIKE ?', '%'+content)
          else
            PostImage.where('title LIKE ?', '%'+content+'%')
          end
  scope.page(1).per(10)  # ページ1を10件ずつ表示する例
end
これで、@records はページネーションをサポートするようになります。

ビューでのページネーションの設定
ビューでページネーションを表示するために、kaminari のヘルパーメソッドを使います。

例 (_list.html.erb ビュー)
erb
コードをコピーする
<table class="table">
  <thead>
    <tr>
      <th>Image</th>
      <th>Title</th>
      <th>Actions</th>
    </tr>
  </thead>
  <tbody>
    <% post_images.each do |post_image| %>
      <tr>
        <td><%= image_tag post_image.get_image, size: '100x100' %></td>
        <td><%= post_image.title %></td>
        <td><%= link_to 'Show', post_image %></td>
      </tr>
    <% end %>
  </tbody>
</table>

<%= paginate post_images %>
</div>
